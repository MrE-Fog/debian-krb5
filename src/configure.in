AC_INIT(configure.in)
WITH_CCOPTS
CONFIG_RULES
AC_SET_BUILDTOP
AC_MSG_CHECKING([for build host])
AC_CACHE_VAL(krb5_cv_host, [export CC
AC_CANONICAL_HOST
krb5_cv_host=$host])
AC_MSG_RESULT($krb5_cv_host)
WITH_KRB5ROOT
WITH_KRB4
WITH_NETLIB
AC_ARG_ENABLE([shared],
[  --enable-shared         build with shared libraries],[
case $krb5_cv_host in
*-*-linux*)
	echo "Enabling shared libraries for Linux...."
	krb5_cv_shlibs_cflags=-fPIC
	krb5_cv_shlibs_ext=so
	krb5_cv_shlibs_dir=shared
	;;
*-*-solaris*)
	echo "Enabling shared libraries for Solaris...."
	krb5_cv_shlibs_cflags=-Kpic
	krb5_cv_shlibs_ext=so
	krb5_cv_shlibs_dir=shared
	;;
alpha-dec-osf*)
	echo "Enabling shared libraries for Alpha OSF...."
	krb5_cv_shlibs_cflags=
	krb5_cv_shlibs_ext=so
	krb5_cv_shlibs_dir=
	if test ! -f so_locations; then
		cp -p /usr/shlib/so_locations .
	fi
	;;

*) 
	echo " "
	echo "Shared libraries not supported on $krb5_cv_host"
	exit 1
	;;
esac],[krb5_cv_shlibs_cflags=
krb5_cv_shlibs_ext=
krb5_cv_shlibs_dir=])
AC_ARG_ENABLE([athena],
[  --enable-athena         build with MIT Project Athena configuration],,)
if test -z "$KRB4_LIB"; then
kadminv4=""
else
kadminv4=kadmin.v4
fi
CONFIG_DIRS(util include lib kdc admin kadmin $kadminv4 kadmin.old slave clients appl tests)
MAKE_SUBDIRS("making",all)
MAKE_SUBDIRS("cleaning",clean)
MAKE_SUBDIRS("installing",install)
MAKE_SUBDIRS("checking",check)
dnl dnl AC_OUTPUT(Makefile,[EXTRA_RULES])
V5_AC_OUTPUT_MAKEFILE
