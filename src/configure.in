AC_INIT(aclocal.m4)
CONFIG_RULES
dnl
dnl
dnl We cannot use the autoconf form as it is too generic and sets other
dnl variables. This is only for the purpose of changing the link options.
AC_MSG_CHECKING(whether we are using GNU C)
AC_CACHE_VAL(krb5_cv_prog_gcc,
[
AC_EGREP_CPP(yes,[#ifdef __GNUC__
yes;
#endif],krb5_cv_prog_gcc=yes,krb5_cv_prog_gcc=no)
])dnl
AC_MSG_RESULT($krb5_cv_prog_gcc)
dnl
ifelse([AC_MSG_CHECKING([for build host])
AC_CACHE_VAL(krb5_cv_host, [export CC
AC_CANONICAL_HOST
krb5_cv_host=$host])
AC_MSG_RESULT($krb5_cv_host)
dnl
dnl Do the shared library grot....
dnl
AC_ARG_ENABLE([shared],
[  --enable-shared         build shared libraries],[
case $krb5_cv_host in
*-*-netbsd*)
	echo "Enabling shared libraries for NetBSD...."
	krb5_cv_shlibs_cflags=-fpic
	krb5_cv_shlibs_ext=so
	krb5_cv_noshlibs_ext=a
krb5_cv_shlibs_versioned_filenames=yes # version in filename of library
	krb5_cv_shlibs_need_nover=no
	krb5_cv_shlibs_dir=shared
	krb5_cv_shlibs_ldflag=
	krb5_cv_noshlibs_ldflag="-static"
	krb5_cv_shlibs_sym_ufo="-u "
	krb5_cv_shlibs_dirhead="-Wl,-R -Wl,"
	krb5_cv_exe_need_dirs=yes
	krb5_cv_shlibs_use_dirs=yes
	krb5_cv_shlibs_use_colon_dirs=no
	krb5_cv_shlibs_tail_comp=
	krb5_cv_shlibs_enabled=yes
	krb5_cv_staticlibs_enabled=yes
	krb5_cv_shlibs_run_ldpath=default
	krb5_cv_shlibs_run_libpath=no
	krb5_cv_shlibs_run_rldroot=no
	;;
*-*-linux*)
	echo "Enabling shared libraries for Linux...."
	krb5_cv_shlibs_cflags=-fPIC
	krb5_cv_shlibs_ext=so
	krb5_cv_noshlibs_ext=a
	krb5_cv_shlibs_versioned_filenames=yes
	krb5_cv_shlibs_need_nover=yes
	krb5_cv_shlibs_dir=shared
	krb5_cv_shlibs_ldflag=
	krb5_cv_noshlibs_ldflag="-static"
	krb5_cv_shlibs_sym_ufo="-u "
	krb5_cv_shlibs_dirhead="-Wl,-rpath -Wl,"
	krb5_cv_exe_need_dirs=yes
	krb5_cv_shlibs_use_dirs=yes
	krb5_cv_shlibs_use_colon_dirs=no
	krb5_cv_shlibs_tail_comp=
	krb5_cv_shlibs_enabled=yes
	krb5_cv_staticlibs_enabled=yes
	krb5_cv_shlibs_run_ldpath=default
	krb5_cv_shlibs_run_libpath=no
	krb5_cv_shlibs_run_rldroot=no
	;;
*-*-aix*)
	echo "Enabling shared libraries for AIX...."
	krb5_cv_shlibs_cflags=
	krb5_cv_shlibs_ext=a
# need_nover *must* be no if versioned_filenames = no
	krb5_cv_shlibs_need_nover=no 
	krb5_cv_shlibs_versioned_filenames=no
	krb5_cv_noshlibs_ext=do-not-make
	krb5_cv_shlibs_dir=
	if test $krb5_cv_prog_gcc = yes ; then
	  krb5_cv_shlibs_ldflag="-Xlinker -bex4:\$(BUILDTOP)/util/aix.bincmds"
	  krb5_cv_noshlibs_ldflag=
	else
	  krb5_cv_shlibs_ldflag="-bex4:\$(BUILDTOP)/util/aix.bincmds"
	  krb5_cv_noshlibs_ldflag=
	fi
	krb5_cv_shlibs_sym_ufo=
	krb5_cv_shlibs_dirhead="-L"
	krb5_cv_exe_need_dirs=yes
	krb5_cv_shlibs_use_dirs=no
	krb5_cv_shlibs_use_colon_dirs=no
	krb5_cv_staticlibs_enabled=
	krb5_cv_shlibs_tail_comp=
	krb5_cv_shlibs_enabled=yes
	krb5_cv_shlibs_run_ldpath=no
	# This ugly line indicates to put $LIBPATH: into the path only if set
	krb5_cv_shlibs_run_libpath="\$\$LIBPATH\$\${LIBPATH:+:}/usr/lib:/lib"
	krb5_cv_shlibs_run_rldroot=no
	;;
mips-sni-sysv4)
	echo "Enabling shared libraries for Sinix...."
	if test $krb5_cv_prog_gcc = yes; then
		krb5_cv_shlibs_cflags=-fpic
	else
		krb5_cv_shlibs_cflags=-Kpic
	fi
	krb5_cv_shlibs_ext=so
	krb5_cv_noshlibs_ext=a
	krb5_cv_shlibs_versioned_filenames=yes
	krb5_cv_shlibs_need_nover=yes
	krb5_cv_shlibs_dir=shared
	krb5_cv_shlibs_ldflag="-dy"
	krb5_cv_noshlibs_ldflag="-dn"
	krb5_cv_shlibs_sym_ufo="-u "
	krb5_cv_shlibs_dirhead="-R"
	krb5_cv_exe_need_dirs=yes
	krb5_cv_shlibs_use_dirs=yes
	krb5_cv_shlibs_use_colon_dirs=no
	krb5_cv_shlibs_tail_comp=
	krb5_cv_staticlibs_enabled=yes
	krb5_cv_shlibs_enabled=yes
	krb5_cv_shlibs_run_ldpath=default
	krb5_cv_shlibs_run_libpath=no
	krb5_cv_shlibs_run_rldroot=no
	;;
*-*-solaris*)
	echo "Enabling shared libraries for Solaris...."
	if test $krb5_cv_prog_gcc = yes; then
		krb5_cv_shlibs_cflags=-fpic
	else
		krb5_cv_shlibs_cflags=-Kpic
	fi
	krb5_cv_shlibs_ext=so
	krb5_cv_noshlibs_ext=a
	krb5_cv_shlibs_versioned_filenames=yes
	krb5_cv_shlibs_need_nover=yes
	krb5_cv_shlibs_dir=shared
	krb5_cv_shlibs_ldflag="-dy"
	krb5_cv_noshlibs_ldflag="-dn"
	krb5_cv_shlibs_sym_ufo="-u "
	krb5_cv_shlibs_dirhead="-R "
	krb5_cv_exe_need_dirs=yes
	krb5_cv_shlibs_use_dirs=yes
	krb5_cv_shlibs_use_colon_dirs=no
	krb5_cv_shlibs_tail_comp=
	krb5_cv_staticlibs_enabled=yes
	krb5_cv_shlibs_enabled=yes
	krb5_cv_shlibs_run_ldpath=default
	krb5_cv_shlibs_run_libpath=no
	krb5_cv_shlibs_run_rldroot=no
	;;
*-*-sunos*)
	echo "Enabling shared libraries for SunOS...."
	if test $krb5_cv_prog_gcc = yes; then
		krb5_cv_shlibs_cflags=-fpic
	else
		krb5_cv_shlibs_cflags=-Kpic
	fi
	krb5_cv_shlibs_ext=so
	krb5_cv_noshlibs_ext=a
	krb5_cv_shlibs_versioned_filenames=yes
	krb5_cv_shlibs_need_nover=yes
	krb5_cv_shlibs_dir=shared
	krb5_cv_shlibs_ldflag="-dy"
	krb5_cv_noshlibs_ldflag="-dn"
	krb5_cv_shlibs_sym_ufo="-u "
	krb5_cv_shlibs_dirhead="-L"
	krb5_cv_exe_need_dirs=yes
	krb5_cv_shlibs_use_dirs=yes
	krb5_cv_shlibs_use_colon_dirs=no
	krb5_cv_shlibs_tail_comp=
	krb5_cv_staticlibs_enabled=yes
	krb5_cv_shlibs_enabled=yes
	krb5_cv_shlibs_run_ldpath=default
	krb5_cv_shlibs_run_libpath=no
	krb5_cv_shlibs_run_rldroot=no
	;;
alpha-dec-osf*)
	echo "Enabling shared libraries for Alpha OSF...."
	krb5_cv_shlibs_cflags=
	krb5_cv_shlibs_ext=so
	krb5_cv_noshlibs_ext=a
	krb5_cv_shlibs_versioned_filenames=yes
	krb5_cv_shlibs_need_nover=yes
	krb5_cv_shlibs_dir=
	krb5_cv_shlibs_ldflag="-call_shared"
	krb5_cv_noshlibs_ldflag="-non_shared"
	krb5_cv_shlibs_sym_ufo="-expect_unresolved "
	krb5_cv_shlibs_dirhead="-rpath "
	krb5_cv_exe_need_dirs=no
	krb5_cv_shlibs_use_dirs=yes
	krb5_cv_shlibs_use_colon_dirs=yes
	krb5_cv_shlibs_tail_comp=
	krb5_cv_staticlibs_enabled=yes
	krb5_cv_shlibs_enabled=yes
	# OSF/1 needs a dummy rldroot to bypath -rpath and therefore
	# needs all library paths indicated
	krb5_cv_shlibs_run_ldpath="/usr/shlib:/usr/ccs/lib:/usr/lib/cmplrs/cc:/usr/lib:/usr/local/lib"
	krb5_cv_shlibs_run_rldroot=dummy
	krb5_cv_shlibs_run_libpath=no
	if test ! -f so_locations; then
		cp -p /usr/shlib/so_locations .
	fi
	if test $krb5_cv_prog_gcc = yes; then
		krb5_cv_shlibs_ldflag=
		krb5_cv_noshlibs_ldflag="-static"
	fi
	;;
*-*-hpux*)
	echo "Enabling shared libraries for HP-UX >=9.x ...."
	krb5_cv_shlibs_cflags=+z
	krb5_cv_shlibs_ext=sl
	krb5_cv_noshlibs_ext=a
	krb5_cv_shlibs_dir=shared
	krb5_cv_shlibs_ldflag="-Wl,-a,default"
	krb5_cv_noshlibs_ldflag=
	krb5_cv_shlibs_sym_ufo=
	krb5_cv_shlibs_dirhead="-Wl,+b,"
	krb5_cv_exe_need_dirs=yes
	krb5_cv_shlibs_use_dirs=yes
	krb5_cv_shlibs_use_colon_dirs=yes
	krb5_cv_shlibs_tail_comp=
	krb5_cv_shlibs_enabled=yes
	krb5_cv_staticlibs_enabled=yes
	krb5_cv_shlibs_run_ldpath=default
	krb5_cv_shlibs_run_libpath=no
	krb5_cv_shlibs_run_rldroot=no
  	;;
*) 
	echo " "
	echo "Shared libraries not supported on $krb5_cv_host"
	exit 1
	;;
esac],[krb5_cv_shlibs_cflags=
krb5_cv_shlibs_ext=
krb5_cv_noshlibs_ext=a
krb5_cv_shlibs_need_nover=yes
krb5_cv_shlibs_dir=
krb5_cv_shlibs_ldflag=
krb5_cv_noshlibs_ldflag=
krb5_cv_shlibs_sym_ufo=
krb5_cv_shlibs_dirhead=
krb5_cv_shlibs_tail_comp=
krb5_cv_staticlibs_enabled=yes
krb5_cv_shlibs_enabled=])
])
dnl
dnl The following lines are so that configure --help gives some global 
dnl configuration options.
KRB5_LIB_AUX
AC_KRB5_TCL
AC_ARG_ENABLE([athena],
[  --enable-athena         build with MIT Project Athena configuration],,)
dnl
if test -z "$KRB4_LIB"; then
kadminv4=""
krb524=""
libkrb4=""
KRB4=""
else
kadminv4=kadmin.v4
krb524=krb524
libkrb4=lib/krb4
KRB4=krb4
fi
AC_SUBST(KRB4)
AC_SUBST(krb524)
dnl
dnl Begin autoconf tests for the Makefiles generated out of the top-level
dnl configure.in...
dnl
AC_PROG_INSTALL
AC_PROG_ARCHIVE
AC_PROG_ARCHIVE_ADD
AC_PROG_RANLIB
AC_CHECK_FUNCS(memmove)
KRB5_BUILD_LIBOBJS
KRB5_BUILD_LIBRARY
dnl
dnl For util/makeshlib.  (Is SHLIB_TAIL_COMP still necessary?!?)
dnl
if test $krb5_cv_prog_gcc = yes ; then
     HAVE_GCC=yes
     else HAVE_GCC=
fi
AC_SUBST(HAVE_GCC)
HOST_TYPE=$krb5_cv_host
AC_SUBST(HOST_TYPE)
SHLIB_TAIL_COMP=$krb5_cv_shlibs_tail_comp
AC_SUBST(SHLIB_TAIL_COMP)
dnl
dnl
AC_CONFIG_SUBDIRS(util/et util/ss util/profile util/pty util/db2 include lib/libcrypto lib/krb5 lib/des425 $libkrb4 lib/krb5util lib/kdb lib/gssapi lib/rpc lib/kadm5 $krb524 kdc kadmin slave clients appl tests)
K5_GEN_MAKEFILE(.)
K5_GEN_MAKEFILE(util)
K5_GEN_MAKEFILE(util/send-pr)
K5_GEN_MAKEFILE(util/dyn, lib libobj)
K5_GEN_MAKEFILE(lib)
K5_GEN_MAKEFILE(config-files)
K5_GEN_MAKEFILE(gen-manpages)
K5_AC_OUTPUT
