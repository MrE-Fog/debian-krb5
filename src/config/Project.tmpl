/**/# Kerberos version 5 Build Parameters
/**/# $Id$

#define ProjectKRB		5

#ifndef TouchCmd
#define TouchCmd touch
#endif
#ifndef CompileEtCmd
#define CompileEtCmd $(ETSRC)/compile_et
#endif
#ifndef MkCmdsCmd
#define MkCmdsCmd $(SSMKSRC)/mk_cmds
#endif
#ifndef SSLib
#define SSLib -lss /* $(TOP)/lib/ss/libss.a */
#endif
#ifndef PosyFlags
#define PosyFlags -f -h2 -a -s
#endif
#ifndef PepyFlags
#define PepyFlags -a PY_advise -s -r
#endif
#ifndef PepyCmd
#define PepyCmd $(ISODE)/@sys/bin/pepy
#endif
#ifndef PosyCmd
#define PosyCmd $(ISODE)/@sys/bin/posy
#endif
#ifndef ArAddCmd
#define ArAddCmd ar cruv
#endif

#ifndef PepyPosyRules
#define	PepyPosyRules()							@@\
.SUFFIXES:	.py							@@\
.py.c:									@@\
	$(PEPY) $(PYFLAGS) $<
#endif /* PepyPosyRules */

#ifndef ErrorTableObjectRule

#define ErrorTableObjectRule()						@@\
.SUFFIXES: .et								@@\
									@@\
.et.h: 									@@\
	$(COMPILE_ET) $*.et						@@\
									@@\
.et.c: 									@@\
	$(COMPILE_ET) $*.et

#endif

#ifndef CmdTableObjectRule

#define CmdTableObjectRule()						@@\
.SUFFIXES: .ct								@@\
									@@\
.ct.c: 									@@\
	$(MK_CMDS) $*.ct

#endif

/*
 * AdditiveLibraryTarget - generate rules to create a library from
 * several directories
 */
#ifndef AdditiveLibraryTarget
#define	AdditiveLibraryTarget(libname,objlist)				@@\
AllTarget(lib/**/libname.a)						@@\
AllTarget(foo/**/libname)						@@\
									@@\
foo/**/libname: objlist							@@\
	$(ARADD) lib/**/libname.a objlist				@@\
	$(TOUCH) foo/**/libname						@@\
	$(RANLIB) lib/**/libname.a					@@\
lib/**/libname.a: objlist						@@\
	$(ARADD) $@ objlist						@@\
	$(RANLIB) $@
#endif /* AdditiveLibraryTarget */

/*
 * OtherdirLibraryTarget - generate rules to create a library in another
 * directory from object files here
 */
#ifndef OtherdirLibraryTarget
#define	OtherdirLibraryTarget(libdir,libname,objlist)			@@\
AllTarget(objlist)							@@\
AllTarget(libdir/lib/**/libname.a)					@@\
AllTarget(foo/**/libname)						@@\
									@@\
foo/**/libname: objlist							@@\
	$(ARADD) libdir/lib/**/libname.a objlist			@@\
	$(TOUCH) foo/**/libname						@@\
libdir/lib/**/libname.a:						@@\
	$(ARADD) $@ objlist						@@\
	$(TOUCH) foo/**/libname
/* The $(RANLIB) is done at the end by the directory itself */
#endif /* OtherdirLibraryTarget */

/*
 * Default Definitions.
 */

            ARADD = ArAddCmd
     TOP_INCLUDES = -I$(TOP)/include $(STDC_TOP_INCLUDES)
        CONFIGSRC = $(TOP)/config
         IMAKESRC = $(CONFIGSRC)
            ISODE = /mit/isode/isode-6.0
          POFLAGS = PosyFlags
          PYFLAGS = PepyFlags
             PEPY = PepyCmd
             POSY = PosyCmd
            TOUCH = TouchCmd
            ETSRC = $(TOP)/lib/comerr/compile_et
         SSCMDSRC = $(TOP)/lib/ss/mk_cmds
            OSLIB = $(TOP)/lib/os/libos.a
           DESLIB = $(TOP)/lib/des/libdes.a
          KRB5LIB = $(TOP)/lib/libkrb5.a
           CRCLIB = $(TOP)/lib/crc-32/libcrc32.a
         ISODELIB = $(ISODE)/@sys/lib/libisode.a

          DEPKLIB = $(KRB5LIB) $(OSLIB) $(DESLIB) $(CRCLIB)
             KLIB = $(DEPKLIB) $(ISODELIB) -lcom_err
        DEPKDBLIB = $(TOP)/lib/kdb/libkdb.a
           KDBLIB = $(DEPKDBLIB) DbmLib

#ifdef UseInstalled
            IMAKE = imake		/* assume BINDIR in path */
           DEPEND = makedepend		/* assume BINDIR in path */
        MKDIRHIER = BourneShell $(BINDIR)/mkdirhier.sh
       COMPILE_ET = compile_et
          MK_CMDS = mk_cmds
            SSLIB = -lss
#else
            IMAKE = $(IMAKESRC)/imake
           DEPEND = DependCmd
        MKDIRHIER = BourneShell $(SCRIPTSRC)/mkdirhier.sh
       COMPILE_ET = CompileEtCmd
          MK_CMDS = MkCmdsCmd
            SSLIB = SSLib
#endif

