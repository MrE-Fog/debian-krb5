/**/# $Source$
/**/# $Author$
/**/# $Id$
/**/#

/**/# site:  $XConsortium: site.def,v 1.21 89/12/06 11:46:50 jim Exp $

/*****************************************************************************
 *                                                                           *
 *			   SITE-SPECIFIC DEFINITIONS                         *
 *                                                                           *
 * Override any of the defaults in *.tmpl here.                              *
 *                                                                           *
 *                                                                           *
 * Make sure you check the following parameters:                             *
 *                                                                           *
 *     1.  HasLargeTmp                                                       *
 *     2.  All the manpage locations & suffixes                              *
 *     3.  All the binary install locations                                  *
 *                                                                           *
 * Note on using DESTDIR:  If you want to install into a scratch directory   *
 * but will eventually move the tree back to the root, compile with DESTDIR  *
 * blank and install with "make install DESTDIR=directory".                  *
 *                                                                           *
 *****************************************************************************/


/* General */
#define InstKmemFlag	-g kmem -m 2755
#define StripInstalledPrograms	YES
#define InstUidFlags	-o root -m 4755

/*
 * SET THESE PARAMETERS FIRST !!!
 */

/*
 * 1.  HasLargeTmp - if your /tmp space is less than a 1meg, you should
 * probably set this to NO
 */
#ifndef HasLargeTmp
#define HasLargeTmp YES
#endif

/*
 * 2. Man page locations & suffixes.
 */
/* AdminManSuffix: man page suffix for administrative programs */
#ifndef AdminManSuffix
#define AdminManSuffix 8
#endif
/* AdminMandir: manual page directory for administrative man pages */
#ifndef AdminMandir
#define AdminMandir $(KRB5ROOT)/man/man$(ADMIN_MANSUFFIX)
#endif

/* ServerManSuffix: man page suffix for server programs */
#ifndef ServerManSuffix
#define ServerManSuffix 8
#endif
/* ServerMandir: manual page directory for server man pages */
#ifndef ServerMandir
#define ServerMandir $(KRB5ROOT)/man/man$(SERVER_MANSUFFIX)
#endif

/* ClientManSuffix: man page suffix for client programs */
#ifndef ClientManSuffix
#define ClientManSuffix 1
#endif
/* ClientMandir: manual page directory for client man pages */
#ifndef ClientMandir
#define ClientMandir $(KRB5ROOT)/man/man$(CLIENT_MANSUFFIX)
#endif

/* FileManSuffix: man page suffix for files */
#ifndef FileManSuffix
#define FileManSuffix 5
#endif
/* FileMandir: manual page directory for file man pages */
#ifndef FileMandir
#define FileMandir $(KRB5ROOT)/man/man$(FILE_MANSUFFIX)
#endif

/*
 * 3. Binary program install areas.
 */
/* AdminBindir: binary install directory for administrative programs */
#ifndef AdminBindir
#define AdminBindir $(KRB5ROOT)/admin
#endif

/* ServerBindir: binary install directory for server programs */
#ifndef ServerBindir
#define ServerBindir $(KRB5ROOT)/sbin
#endif

/* ClientBindir: binary install directory for client programs */
#ifndef ClientBindir
#define ClientBindir $(KRB5ROOT)/bin
#endif

/* Libdir: install directory for kerberos libraries */
#ifndef Krb5Libdir
#define	Krb5Libdir $(KRB5ROOT)/lib
#endif

#ifndef Krb5Incdir
#define	Krb5Incdir $(KRB5ROOT)/include
#endif
/*****************************************************************************
 *                                                                           *
 *			       Build Parameters                              *
 *                                                                           *
 *****************************************************************************/

/*
 * If you want to use GCC, set HasGcc in the appropriate .cf files.
 */
#ifndef HasGcc
#define HasGcc NO
#endif

#ifdef SunArchitecture
#define	CcCmd cc -pipe
#endif

/*
 * If you want to use VPATH to do makefile building, set it here.
 */
#undef Use_VPATH

/* The -Z flag is a special loader flag at Athena to unmap page zero on
   some architectures that normally allow p0 references, e.g. VAX BSD.

   -T0x400000 has a similar effect on AIX 1.2

   Symbolic debugging is difficult on RT and PS/2 when this option is used. */
#if defined(AIXArchitecture) && OSMajorVersion == 1
#define	ExtraLoadFlags -T0x400000
#else
#if !defined(UltrixArchitecture) && !defined(AIXArchitecture) && !defined(SunArchitecture) && !defined(LinuxArchitecture)
#define ExtraLoadFlags -Z
#endif
#endif

/* With gcc, use -g -O.  Otherwise use the default (-O). */
#if !defined(DefaultCDebugFlags) && HasGcc
#define DefaultCDebugFlags OptimizedCDebugFlags DebuggableCDebugFlags
#endif

/* If you have the Hesiod software and libraries installed, and want to
   use it in some application programs, then turn these on.  If they're
   not turned on, they are left empty in Project.tmpl */
#define HesiodDefines -DHESIOD
#define HesiodLibs /usr/athena/lib/libhesiod.a

#if 0
/* not yet in use, but maybe someday... */
/* If you have the Zephyr software and libraries installed, and want to
   use it in some application programs, then turn these on.  If they're
   not turned on, they are left empty in Project.tmpl.

   NOTE:  You must have Kerberos v4 in order to use Zephyr.
 */
#define ZephyrDefines -DZEPHYR
#define ZephyrLibs -lzephyr
#endif

#ifndef PS2Architecture
/* define IsodeLib to be what you pass to the loader to find the ISODE
   library.  This might want to be -lisode if you have it installed.
   IsodeDir is put into the 'make' variable ISODE. */

/* Work around bug in gld; it doesn't like the at-sign in @sys */

#define IsodeDir /mit/isode/isode-7.0
#define IsodeLib -L/mit/isode/isode-7.0/gld-bug-sys/lib -lisode
#define IsodeIncls /mit/isode/isode-7.0/gld-bug-sys/include

/*
 * #define ISODE 7 only if you are using ISODE 7.0 or later.
 */
#define ISODE7

/* Re-define PepsyCmd if pepsy isn't in your search path. */

#define PepsyCmd IsodeDir/@sys/bin/pepsy
#endif

#define UseImakeInstalled /* -- turn on if you have imake installed */
#define UseMakedependInstalled /* -- turn on if you have makedepend installed */
#define Krb4ApplCompat /* turn this on if you want selected applications to
			  work with both v4 & v5 code */
#define Krb4KDCCompat /* turn this on if you want the KDC to provide v4
			 tickets from a v5 database */
/* #define Krb4Includes <empty>	-- If you don't want to use our copy of the
   				   Kerberos V4 include files, set this to
				   an empty name, by using the /**/
/* 				   trick */
/* #define Krb4LibList -lquux  -- If -lkrb -ldes is NOT the right thing
   				  to get V4 libraries, define it here
				  to something else */

#define Krb4LibList /usr/athena/lib/libkrb.a $(KLIBLOC) -l$(DES425LIB)
#define Krb4KdbList /usr/athena/lib/libkdb.a

/* the following might want to be put into a specific architecture
   definition file */

/* #define HasVfprintf -- turn on if you have vfprintf/vsprintf in libc
   			  (might want to be in the architecture-specific
			   configuration file) */
/* #define HasVsyslog -- turn on if you have vsyslog in libc
   			  (might want to be in the architecture-specific
			   configuration file) */
/* #define HasStrdup -- turn on if you have strdup() in libc
   			  (might want to be in the architecture-specific
			   configuration file) */

#if 0
/* alternate library search paths, if needed for some system libraries */
#define LdLibLocations -L/usr/athena/lib
#endif

/* additional include paths, if needed, such as those needed
   to get special include files, like <ss/ss.h> or <com_err.h>,
   or Kerberos V4 include files */
#define	StandardIncludes -I/usr/athena/include

#if defined(AIXArchitecture) && OSMajorVersion == 3
#define	StandardDefines	-D_ALL_SOURCE
/* For all its flaws, gmake has one advantage over AIX make: it supports
   VPATH in the way the Kerberos config files want.   WARNING: if you combine
   RCS and VPATH with gmake will will probably lose.  */
#define MakeCmd gmake
.SUFFIXES:
.SUFFIXES: .et .c .h .o

#undef LdLibLocations
#define LdLibLocations -L/usr/athena/lib/shared -L/mit/krb5/rsaix/lib/shared
#endif

#define	AthenaEnv YES		/* Define this if you are in the
				   athena environment.
				   No one else should define this.  */

/* Define this if you are building for multiple architectures or operating
   systems.  This tells the build where to look for the sources.  */
#ifndef UseInstalled
/* #define SourceTop /u1/krb5/sandbox/build */
#endif

#if defined(VaxArchitecture) || defined(RtArchitecture)
#if HasGcc
#ifdef SourceTop
#define	STDCTopIncludes	-I$(SRCTOP)/include/stdc-incl
#else
#define	STDCTopIncludes	-I$(TOP)/include/stdc-incl
#endif
#endif /* HasGcc */
#endif

#ifdef UltrixArchitecture
#define MakeCmd gmake
#endif

#if defined(VaxArchitecture) && defined(UltrixArchitecture)
#undef STDCTopIncludes
#undef CcCmd
#define CcCmd gcc -pedantic -pipe -Wall -fpcc-struct-return
#define	OptimizedCDebugFlags -O3
#define DefaultCDebugFlags OptimizedCDebugFlags -g
#endif
