#	$Source$
#	$Author$
#	$Id$
#
#  Copyright 1990,1991 by the Massachusetts Institute of Technology.
#  All Rights Reserved.
# 
# Export of this software from the United States of America is assumed
#   to require a specific license from the United States Government.
#   It is the responsibility of any person or organization contemplating
#   export to obtain such a license before exporting.
# 
# WITHIN THAT CONSTRAINT, permission to use, copy, modify, and
# distribute this software and its documentation for any purpose and
# without fee is hereby granted, provided that the above copyright
# notice appear in all copies and that both that copyright notice and
# this permission notice appear in supporting documentation, and that
# the name of M.I.T. not be used in advertising or publicity pertaining
# to distribution of the software without specific, written prior
# permission.  M.I.T. makes no representations about the suitability of
# this software for any purpose.  It is provided "as is" without express
# or implied warranty.
# 
# 
NormalLibraryObjectRule()

DEFINES=-DPEPSY_LINKABLE_FUNCS

EHDRDIR=$(TOP)/include/krb5/asn.1

SRCS= \
	KRB5_tables.c	\
	$(SRCDIR)encode.c 	\
	$(SRCDIR)decode.c	\
	$(SRCDIR)adat2kadat.c	\
	$(SRCDIR)addr2kaddr.c	\
	$(SRCDIR)adr2kadr.c	\
	$(SRCDIR)aprp2kaprp.c	\
	$(SRCDIR)aprq2kaprq.c	\
	$(SRCDIR)arep2karep.c	\
	$(SRCDIR)auth2kauth.c	\
	$(SRCDIR)cvt_flags.c	\
	$(SRCDIR)ck2kck.c	\
	$(SRCDIR)edat2kedat.c	\
	$(SRCDIR)ekrp2kekrp.c	\
	$(SRCDIR)enck2kkey.c	\
	$(SRCDIR)err2kerr.c	\
	$(SRCDIR)etpt2ketpt.c	\
	$(SRCDIR)g2unix.c	\
	$(SRCDIR)kadat2adat.c	\
	$(SRCDIR)kaddr2addr.c	\
	$(SRCDIR)kadr2adr.c	\
	$(SRCDIR)kaprp2aprp.c	\
	$(SRCDIR)kaprq2aprq.c	\
	$(SRCDIR)karep2arep.c	\
	$(SRCDIR)kauth2auth.c	\
	$(SRCDIR)kck2ck.c	\
	$(SRCDIR)kdcr2kkdcr.c	\
	$(SRCDIR)kdcr2ktgsr.c	\
	$(SRCDIR)kedat2edat.c	\
	$(SRCDIR)kekrp2ekrp.c	\
	$(SRCDIR)kerr2err.c	\
	$(SRCDIR)ketpt2etpt.c	\
	$(SRCDIR)kkdcr2kdcr.c	\
	$(SRCDIR)kkey2enck.c	\
	$(SRCDIR)klsrq2lsrq.c	\
	$(SRCDIR)kprep2prep.c	\
	$(SRCDIR)kprin2prin.c	\
	$(SRCDIR)kpriv2priv.c	\
	$(SRCDIR)ksafe2safe.c	\
	$(SRCDIR)ktran2tran.c	\
	$(SRCDIR)ktgrq2tgrq.c	\
	$(SRCDIR)ktgsr2kdcr.c	\
	$(SRCDIR)ktkt2tkt.c	\
	$(SRCDIR)lsrq2klsrq.c	\
	$(SRCDIR)prep2kprep.c	\
	$(SRCDIR)prin2kprin.c	\
	$(SRCDIR)priv2kpriv.c	\
	$(SRCDIR)qbuf2data.c	\
	$(SRCDIR)safe2ksafe.c	\
	$(SRCDIR)tran2ktran.c	\
	$(SRCDIR)tgrq2ktgrq.c	\
	$(SRCDIR)tkt2ktkt.c	\
	$(SRCDIR)u2gen.c 	\
	$(SRCDIR)ktgsr2kdcr.c	\
	$(SRCDIR)kpwd2pwd.c	\
	$(SRCDIR)kpwds2pwds.c	\
	$(SRCDIR)pwd2kpwd.c	\
	$(SRCDIR)pwds2kpwds.c

OBJS= \
	KRB5_tables.o	\
	encode.o	\
	decode.o	\
	adat2kadat.o	\
	addr2kaddr.o	\
	adr2kadr.o	\
	aprp2kaprp.o	\
	aprq2kaprq.o	\
	arep2karep.o	\
	auth2kauth.o	\
	cvt_flags.o	\
	ck2kck.o	\
	edat2kedat.o	\
	ekrp2kekrp.o	\
	enck2kkey.o	\
	err2kerr.o	\
	etpt2ketpt.o	\
	g2unix.o	\
	kadat2adat.o	\
	kaddr2addr.o	\
	kadr2adr.o	\
	kaprp2aprp.o	\
	kaprq2aprq.o	\
	karep2arep.o	\
	kauth2auth.o	\
	kck2ck.o	\
	kdcr2kkdcr.o	\
	kdcr2ktgsr.o	\
	kedat2edat.o	\
	kekrp2ekrp.o	\
	kerr2err.o	\
	ketpt2etpt.o	\
	kkdcr2kdcr.o	\
	kkey2enck.o	\
	klsrq2lsrq.o	\
	kprep2prep.o	\
	kprin2prin.o	\
	kpriv2priv.o	\
	ksafe2safe.o	\
	ktran2tran.o	\
	ktgrq2tgrq.o	\
	ktgsr2kdcr.o	\
	ktkt2tkt.o	\
	lsrq2klsrq.o	\
	prep2kprep.o	\
	prin2kprin.o	\
	priv2kpriv.o	\
	qbuf2data.o	\
	safe2ksafe.o	\
	tran2ktran.o	\
	tgrq2ktgrq.o	\
	tkt2ktkt.o	\
	u2gen.o		\
	kpwd2pwd.o	\
	kpwds2pwds.o	\
	pwd2kpwd.o	\
	pwds2kpwds.o

all:: includes

includes:: KRB5-types.h

OtherdirLibraryTarget($(TOP)/lib,krb5,$(OBJS))

PepsyTarget(KRB5)

CopyHeader(KRB5-types.h,$(EHDRDIR))
CopyHeader(KRB5_defs.h,$(EHDRDIR))
CopyHeader(KRB5_pre_defs.h,$(EHDRDIR))

Krb5InstallHeaders(KRB5_defs.h KRB5_pre_defs.h KRB5-types.h, $(KRB5_INCDIR)/krb5/asn.1)

clean::
	$(RM) KRB5.ph KRB5_defs.h KRB5_pre_defs.h KRB5-types.h KRB5_tables.c

SpecialObjectRule(KRB5_tables.o,KRB5_tables.c,)

depend:: KRB5_tables.c

DependTarget()

#ifdef UseSedHack

#define IHaveSpecialMakefileTarget

Makefile:: $(SRCDIR)Imakefile
	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR) $(SRCSUBDIR)Imakefile -s Makefile.new
	$(MAKE) -f Makefile.new noop
	-@if [ -f Makefile ]; then \
		echo "$(RM) Makefile.bak; $(MV) Makefile Makefile.bak";\
		$(RM) Makefile.bak; $(MV) Makefile Makefile.bak;\
	fi
	sed 's/^@/	@/' Makefile.new > Makefile || $(MV) Makefile.new Makefile
	-$(RM) Makefile.new

#endif

noop::
