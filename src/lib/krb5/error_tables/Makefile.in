CFLAGS = $(CCOPTS) $(DEFS)

##DOSBUILDTOP = ..\..\..
##DOSLIBNAME=..\krb5.lib
##DOS!include $(BUILDTOP)\config\windows.in

EHDRDIR=$(BUILDTOP)$(S)include$(S)krb5

HDRS= asn1_err.h kdb5_err.h krb5_err.h kv5m_err.h adm_err.h
OBJS= asn1_err.$(OBJEXT) kdb5_err.$(OBJEXT) krb5_err.$(OBJEXT) \
      kv5m_err.$(OBJEXT) adm_err.$(OBJEXT) init_ets.$(OBJEXT)
ETSRCS= asn1_err.c kdb5_err.c krb5_err.c kv5m_err.c adm_err.c
SRCS=$(ETSRCS) init_ets.c

all:: all-$(WHAT)

all-unix:: $(HDRS) includes $(OBJS)
all-mac:: $(HDRS) $(OBJS)

all-windows:: $(OBJS)

unixmac: $(HDRS) $(SRCS)

awk-windows:
	$(AWK) -f $(SRCTOP)/util/et/et_h.awk outfile=asn1_err.h asn1_err.et
	$(AWK) -f $(SRCTOP)/util/et/et_h.awk outfile=kdb5_err.h kdb5_err.et
	$(AWK) -f $(SRCTOP)/util/et/et_h.awk outfile=krb5_err.h krb5_err.et
	$(AWK) -f $(SRCTOP)/util/et/et_h.awk outfile=adm_err.h adm_err.et
	$(AWK) -f $(SRCTOP)/util/et/et_h.awk outfile=kv5m_err.h kv5m_err.et
	$(AWK) -f $(SRCTOP)/util/et/et_c.awk outfile=asn1_err.c asn1_err.et
	$(AWK) -f $(SRCTOP)/util/et/et_c.awk outfile=kdb5_err.c kdb5_err.et
	$(AWK) -f $(SRCTOP)/util/et/et_c.awk outfile=krb5_err.c krb5_err.et
	$(AWK) -f $(SRCTOP)/util/et/et_c.awk outfile=adm_err.c adm_err.et
	$(AWK) -f $(SRCTOP)/util/et/et_c.awk outfile=kv5m_err.c kv5m_err.et
	if exist asn1_err.h copy asn1_err.h $(EHDRDIR)
	if exist kdb5_err.h copy kdb5_err.h $(EHDRDIR)
	if exist krb5_err.h copy krb5_err.h $(EHDRDIR)
	if exist adm_err.h copy adm_err.h $(EHDRDIR)
	if exist kv5m_err.h copy kv5m_err.h $(EHDRDIR)

install:: $(HDRS)
	@set -x; for f in $(HDRS) ; \
	do if cmp -s $$f $(DESTDIR)$(KRB5_INCDIR)/krb5/$$f; \
	then true; else \
		$(RM) $(DESTDIR)$(KRB5_INCDIR)/krb5/$$f; \
		cp $$f $(DESTDIR)$(KRB5_INCDIR)/krb5/$$f ; \
	fi; done

#
# dependencies for traditional makes
#
asn1_err.$(OBJEXT): asn1_err.c
isode_err.$(OBJEXT): isode_err.c
kdb5_err.$(OBJEXT): kdb5_err.c
krb5_err.$(OBJEXT): krb5_err.c
adm_err.$(OBJEXT): adm_err.c
kv5m_err.$(OBJEXT): kv5m_err.c

clean:: clean-$(WHAT)

clean-unix::
	$(RM) $(HDRS) $(ETSRCS)

clean-windows::
