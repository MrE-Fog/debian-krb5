Fri May 26 20:19:39 1995  Theodore Y. Ts'o  (tytso@dcl)

	* configure.in, Makefile.in: Add support for building shared libraries.

Thu May 25 15:37:39 1995 Keith Vetter (keithv@fusion.com)

	* fcc_maybe.c: the NEED_SOCKETS has to be before the #include line.

Tue May 23 16:28:07 1995  Theodore Y. Ts'o  (tytso@dcl)

	* fcc_maybe.c: Rearrange #include files so that krb5.h gets
		included first, so that the debugging information can be
		more efficiently collapsed since the type numbers will be
		the same.

Tue May  9 16:23:39 1995  Ezra Peisach  <epeisach@kangaroo.mit.edu>

	* fcc_close.c (krb5_fcc_close): Remove <malloc.h> as not all
		platforms have it and k5-int.h already takes care of
		malloc declarations.

Thu Apr 13 15:49:16 1995 Keith Vetter (keithv@fusion.com)

	* *.[ch]: removed unneeded INTERFACE from non-api functions.

Wed Mar 22 11:24:07 1995 Keith Vetter (keithv@fusion.com)

	* fcc-proto.h: added prototype for cache changing hook, 
	* fcc.h: changed cache file location for the PC (out of /tmp).
        * fcc_ops.h: made the cache changing hook return an error code.

Tue Mar 21 19:14:49 1995 Keith Vetter (keithv@fusion.com)

	* fcc_destroy.c: open file on the PC in binary mode, worked around
           the unixism of working with deleted files.
        * fcc_genn.c: open file on the PC in binary mode.
        * fcc_init.c: uninitialized variable on the PC.
        * fcc_maybe.c: open file on the PC in binary mode.
        * fcc_read.c: a real clever one-line piece of code to turn 4 bytes 
           into a 32 bit integer fails miserbly on 16 bit machines. Fixed.
        * fcc_ops.c: added hooks to notify programs when the ccache changes.
           For windows, the code is taken from the K4 release, for other
           platforms it does nothing.
        * fcc_destroy.c, fcc_genn.c, fcc_init.c, fcc_store.c: added calls to
           the hook described for fcc_ops.c.

Fri Mar 17 19:23:09 1995  John Gilmore  (gnu at toad.com)

	* Makefile.in (LDFLAGS):  Eliminate, duplicates config/pre.in.

Wed Mar 15 12:07:28 1995 Keith Vetter (keithv@fusion.com)

	* fcc_eseq.c, fcc_init.c, fcc_maybe.c, fcc_dest.c:
	   Initialized return code.
	* fcc_genn.c, fcc_init.c: removed chmod call for the PC

Thu Mar 09 18:43:10 1995  Chris Provenzano (proven@mit.edu)

	* fcc_destry.c (krb5_fcc_destroy())
	* fcc_init.c   (krb5_fcc_initialize())
		Initialize kret before returning it.

	* fcc_maybe.c (fcc_lock_file()) Initialize st before returning it.

Tue Mar  7 19:54:48 1995  Mark Eichin  <eichin@cygnus.com>

	* configure.in: take out ISODE_DEFS.

Tue Mar 7 15:58:15 1995 Keith Vetter (keithv@fusion.com)

	* fcc.h: alwas pull in low-level i/o stuff for the PC.
        * *.c, fcc-proto.h: added windows INTERFACE keyword.
        * fcc_dest.c, fcc_init.c, fcc_maybe.c, fcc_nseq.c, fcc_read.c, 
           fcc_sseq.c, fcc_write.c: fixed up some int/long and 
           signed/unsigned problems.

Tue Feb 28 00:35:55 1995  John Gilmore  (gnu at toad.com)

	* fcc.h, fcc_gennew.c, fcc_maybe.c:  Avoid <krb5/...> includes.

Tue Feb 21 16:14:25 1995  Mark Eichin  (eichin@cygnus.com)

	* configure.in: check for HAVE_FLOCK, since we may need to use
	both flock and fcntl.
	* fcc_maybe.c: try fcntl lock, if we get EINVAL specifically, fall
	back to flock (if we have it.)

Fri Jan 27 00:49:36 1995  Chris Provenzano (proven@mit.edu)

        * Fix fcc_read.c (krb5_fcc_read_authdatum()) krb5_authdatatype
                is of type unsigned int and therefore shouldn't be the
                argument to krb5_fcc_read_ui_2(). 

Fri Jan 13 15:23:47 1995  Chris Provenzano (proven@mit.edu)

	* Added krb5_context to all krb5_routines

Wed Dec  7 16:58:59 1994    <tytso@rsx-11.mit.edu>

	* fcc_write.c (krb5_fcc_store_addrs): If a null addresses is
		passed in, don't core dump.

Fri Nov 18 17:22:51 1994  Theodore Y. Ts'o  (tytso@dcl)

	* fcc_read.c (krb5_fcc_read_principal): Fix to return correct
		error code, instead of always returning KRB5_CC_NOMEM.

Wed Nov 16 23:31:49 1994  Theodore Y. Ts'o  (tytso@dcl)

        * fcc-proto.h, fcc.h, fcc_maybe.c (krb5_fcc_open_file), fcc_nseq.c
	(krb5_fcc_next_cred), fcc_store.c (krb5_fcc_store), fcc_read.c,
	fcc_write.c:  Changes to implement FCC format version #3, which
		is architecture independent, and includes the key
		encryption type information.

	* fcc_gennew.c (krb5_fcc_generate_new): Generate new ccaches using
		whatever version is marked as the default.

	* fcc_read.c (krb5_fcc_read_keyblock): Insert keyblock magic
		number and initialize etype value.  Also add magic numbers
		for the krb5_principal, krb5_data, krb5_address, and
		krb5_authdata structures.

Mon Oct 31 17:02:04 1994  Theodore Y. Ts'o  (tytso@dcl)

	* fcc_maybe.c: Back out POSIX_FILE_LOCKS change.  (Should be
		depending on autoconf.h to supply this #define if
		necessary.) 

Thu Oct 13 17:23:42 1994  Theodore Y. Ts'o  (tytso@maytag)

	* configure.in: Add ISODE_DEFS

Fri Oct  7 14:18:44 1994  Theodore Y. Ts'o  (tytso@dcl)

	* configure.in: Add test for unistd.h
	* fcc_maybe.c: Use POSIX_FILE_LOCKS if _POSIX_VERSION is defined.

Fri Sep 30 21:54:20 1994  Theodore Y. Ts'o  (tytso@dcl)

	* fcc_defops.c (krb5_cc_file_ops):
	  fcc_ops.c (krb5_fcc_ops): Add placeholder for magic number

Thu Sep 22 21:37:15 1994  Theodore Y. Ts'o  (tytso@dcl)

	* fcc_destry.c (krb5_fcc_destroy): Make sure memory associated
		with the credentials cache is freed after it is destroyed.

Thu Aug 18 16:33:33 1994  Theodore Y. Ts'o  (tytso at tsx-11)

	* fcc_retrv.c (srvname_match): Fix bug in srvname_match where so
	that the server realm is really ignored in the compare, like it's
	supposed to be.

Mon Jun 20 19:36:19 1994  Theodore Y. Ts'o  (tytso at tsx-11)

	* fcc.h: #include <krb5/osconf.h> so that build works using imake.


