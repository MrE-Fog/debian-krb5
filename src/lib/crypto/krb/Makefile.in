mydir=lib$(S)crypto$(S)krb
BUILDTOP=$(REL)..$(S)..$(S)..
SUBDIRS= arcfour checksum crc32 dk prf old raw 
LOCALINCLUDES = -I$(srcdir) -I$(srcdir)/../$(CRYPTO_IMPL)
RUN_SETUP = @KRB5_RUN_ENV@
PROG_LIBPATH=-L$(TOPLIBD)
PROG_RPATH=$(KRB5_LIBDIR)
DEFS=

##DOS##BUILDTOP = ..\..\..
##DOS##PREFIXDIR = krb
##DOS##OBJFILE = ..\$(OUTPRE)krb.lst

PROG_LIBPATH=-L$(TOPLIBD)
PROG_RPATH=$(KRB5_LIBDIR)

STLIBOBJS=\
	aead.o		 	\
	block_size.o		\
	cf2.o 			\
	checksum_length.o	\
	cksumtype_to_string.o	\
	cksumtypes.o		\
	coll_proof_cksum.o	\
	combine_keys.o		\
	crypto_length.o		\
	crypto_libinit.o	\
	default_state.o 	\
	decrypt.o		\
	decrypt_iov.o		\
	encrypt.o		\
	encrypt_iov.o		\
	encrypt_length.o	\
	enctype_util.o		\
	etypes.o		\
	key.o			\
	keyblocks.o 		\
	keyed_cksum.o		\
	keyed_checksum_types.o	\
	keylengths.o		\
	make_checksum.o		\
	make_checksum_iov.o	\
	make_random_key.o	\
	mandatory_sumtype.o	\
	nfold.o			\
	old_api_glue.o		\
	prf.o			\
	prng.o			\
	prng_$(PRNG_ALG).o	\
	random_to_key.o		\
	state.o 		\
	string_to_cksumtype.o	\
	string_to_key.o		\
	valid_cksumtype.o	\
	verify_checksum.o	\
	verify_checksum_iov.o

OBJS=\
	$(OUTPRE)aead.$(OBJEXT)		 	\
	$(OUTPRE)block_size.$(OBJEXT)		\
	$(OUTPRE)cf2.$(OBJEXT) 			\
	$(OUTPRE)checksum_length.$(OBJEXT)	\
	$(OUTPRE)cksumtype_to_string.$(OBJEXT)	\
	$(OUTPRE)cksumtypes.$(OBJEXT)		\
	$(OUTPRE)coll_proof_cksum.$(OBJEXT)	\
	$(OUTPRE)combine_keys.$(OBJEXT)		\
	$(OUTPRE)crypto_length.$(OBJEXT)	\
	$(OUTPRE)crypto_libinit.$(OBJEXT)	\
	$(OUTPRE)default_state.$(OBJEXT) 	\
	$(OUTPRE)decrypt.$(OBJEXT)		\
	$(OUTPRE)decrypt_iov.$(OBJEXT)		\
	$(OUTPRE)encrypt.$(OBJEXT)		\
	$(OUTPRE)encrypt_iov.$(OBJEXT)		\
	$(OUTPRE)encrypt_length.$(OBJEXT)	\
	$(OUTPRE)enctype_util.$(OBJEXT)	\
	$(OUTPRE)etypes.$(OBJEXT)		\
	$(OUTPRE)key.$(OBJEXT)			\
	$(OUTPRE)keyblocks.$(OBJEXT) 		\
	$(OUTPRE)keyed_cksum.$(OBJEXT)		\
	$(OUTPRE)keyed_checksum_types.$(OBJEXT)	\
	$(OUTPRE)keylengths.$(OBJEXT)		\
	$(OUTPRE)make_checksum.$(OBJEXT)	\
	$(OUTPRE)make_checksum_iov.$(OBJEXT)	\
	$(OUTPRE)make_random_key.$(OBJEXT)	\
	$(OUTPRE)mandatory_sumtype.$(OBJEXT)	\
	$(OUTPRE)nfold.$(OBJEXT)		\
	$(OUTPRE)old_api_glue.$(OBJEXT)		\
	$(OUTPRE)prf.$(OBJEXT) 			\
	$(OUTPRE)prng.$(OBJEXT)			\
	$(OUTPRE)prng_$(PRNG_ALG).$(OBJEXT)	\
	$(OUTPRE)random_to_key.$(OBJEXT)	\
	$(OUTPRE)state.$(OBJEXT) 		\
	$(OUTPRE)string_to_cksumtype.$(OBJEXT)	\
	$(OUTPRE)string_to_key.$(OBJEXT)	\
	$(OUTPRE)valid_cksumtype.$(OBJEXT)	\
	$(OUTPRE)verify_checksum.$(OBJEXT)	\
	$(OUTPRE)verify_checksum_iov.$(OBJEXT)

SRCS=\
	$(srcdir)/aead.c		\
	$(srcdir)/block_size.c		\
	$(srcdir)/checksum_length.c	\
	$(srcdir)/cksumtype_to_string.c	\
	$(srcdir)/cksumtypes.c		\
	$(srcdir)/coll_proof_cksum.c	\
	$(srcdir)/combine_keys.c	\
	$(srcdir)/crypto_length.c	\
	$(srcdir)/crypto_libinit.c	\
	$(srcdir)/default_state.c 	\
	$(srcdir)/decrypt.c		\
	$(srcdir)/decrypt_iov.c		\
	$(srcdir)/encrypt.c		\
	$(srcdir)/encrypt_iov.c		\
	$(srcdir)/encrypt_length.c	\
	$(srcdir)/enctype_util.c	\
	$(srcdir)/etypes.c		\
	$(srcdir)/key.c			\
	$(srcdir)/keyblocks.c 		\
	$(srcdir)/keyed_cksum.c		\
	$(srcdir)/keyed_checksum_types.c\
	$(srcdir)/keylengths.c		\
	$(srcdir)/make_checksum.c	\
	$(srcdir)/make_checksum_iov.c	\
	$(srcdir)/make_random_key.c	\
	$(srcdir)/mandatory_sumtype.c	\
	$(srcdir)/nfold.c		\
	$(srcdir)/old_api_glue.c	\
	$(srcdir)/prf.c 		\
	$(srcdir)/prng.c 		\
	$(srcdir)/prng_$(PRNG_ALG).c	\
	$(srcdir)/cf2.c 		\
	$(srcdir)/random_to_key.c	\
	$(srcdir)/state.c 		\
	$(srcdir)/string_to_cksumtype.c	\
	$(srcdir)/string_to_key.c	\
	$(srcdir)/t_fortuna.c		\
	$(srcdir)/valid_cksumtype.c	\
	$(srcdir)/verify_checksum.c	\
	$(srcdir)/verify_checksum_iov.c

STOBJLISTS=arcfour/OBJS.ST checksum/OBJS.ST crc32/OBJS.ST	\
	dk/OBJS.ST prf/OBJS.ST old/OBJS.ST raw/OBJS.ST OBJS.ST

SUBDIROBJLISTS=arcfour/OBJS.ST checksum/OBJS.ST crc32/OBJS.ST	\
	dk/OBJS.ST prf/OBJS.ST old/OBJS.ST raw/OBJS.ST

##DOS##LIBOBJS = $(OBJS)

all-unix:: all-libobjs
includes:: depend

depend:: $(SRCS)

check-unix:: t_fortuna
	if [ $(PRNG_ALG) = fortuna ]; then \
		$(RUN_SETUP) $(VALGRIND) ./t_fortuna > t_fortuna.output; \
		cmp t_fortuna.output $(srcdir)/t_fortuna.expected; \
	fi

t_fortuna: t_fortuna.o $(SUPPORT_DEPLIB) $(CRYPTO_DEPLIB)
	$(CC_LINK) -o t_fortuna t_fortuna.o $(K5CRYPTO_LIB) $(SUPPORT_LIB)

clean-unix:: clean-libobjs

@lib_frag@
@libobj_frag@

