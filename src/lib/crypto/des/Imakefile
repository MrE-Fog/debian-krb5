#	$Source$
#	$Author$
#	$Id$
#
#  Copyright 1990 by the Massachusetts Institute of Technology.
#  All Rights Reserved.
# 
# Export of this software from the United States of America may
#   require a specific license from the United States Government.
#   It is the responsibility of any person or organization contemplating
#   export to obtain such a license before exporting.
# 
# WITHIN THAT CONSTRAINT, permission to use, copy, modify, and
# distribute this software and its documentation for any purpose and
# without fee is hereby granted, provided that the above copyright
# notice appear in all copies and that both that copyright notice and
# this permission notice appear in supporting documentation, and that
# the name of M.I.T. not be used in advertising or publicity pertaining
# to distribution of the software without specific, written prior
# permission.  M.I.T. makes no representations about the suitability of
# this software for any purpose.  It is provided "as is" without express
# or implied warranty.
# 
# 
NormalLibraryObjectRule()

OBJS=	cksum.o		\
	des.o		\
	cbc_cksum.o	\
	cs_entry.o	\
	enc_dec.o	\
	krb_glue.o	\
	finish_key.o	\
	fin_rndkey.o	\
	init_rkey.o	\
	process_ky.o	\
	random_key.o	\
	string2key.o	\
	key_parity.o	\
	key_sched.o	\
	new_rn_key.o	\
	weak_key.o	

SRCS=	$(SRCDIR)cksum.c	\
	$(SRCDIR)des.c		\
	$(SRCDIR)cs_entry.c	\
	$(SRCDIR)cbc_cksum.c	\
	$(SRCDIR)enc_dec.c	\
	$(SRCDIR)krb_glue.c	\
	$(SRCDIR)finish_key.c	\
	$(SRCDIR)fin_rndkey.c	\
	$(SRCDIR)init_rkey.c	\
	$(SRCDIR)process_ky.c	\
	$(SRCDIR)random_key.c	\
	$(SRCDIR)string2key.c	\
	$(SRCDIR)key_parity.c	\
	$(SRCDIR)key_sched.c	\
	$(SRCDIR)new_rn_key.c	\
	$(SRCDIR)weak_key.c	

DEFINES = $(DESDEFINES)

INCLUDES = -I.

VERIFYOBJ = verify.o

DESTESTOBJ = destest.o

includes::

all::
includes:: key_perm.h odd.h p_table.h s_table.h
depend:: fp.c ip.c p.c
depend:: des.c $(SRCS)

SubdirLibraryRule($(OBJS))

DependTarget()

$(OBJS): fp.c ip.c key_perm.h odd.h p.c p_table.h s_table.h

clean::
	$(RM) fp.c ip.c key_perm.h odd.h p.c p_table.h s_table.h

EXT_LIB = $(TOP)/lib/krb5/error_tables/krb5_err.o \
                  $(TOP)/lib/krb5/error_tables/isode_err.o \
                  $(TOP)/lib/crypto/cryptoconf.o \
                  $(TOP)/lib/crypto/crc-32/libcrc32.a \
                  libdes.a $(OSLIB) $(COMERRLIB)

NormalProgramTarget(verify,$(VERIFYOBJ),libdes.a,$(EXT_LIB),)

NormalProgramTarget(destest,$(DESTESTOBJ),libdes.a,$(EXT_LIB),)

NormalProgramTarget(make_e,make_e.o,misc.o,misc.o,)

NormalProgramTarget(make_fp,make_fp.o,misc.o,misc.o,)

fp.c: make_fp
	./make_fp fp.c

NormalProgramTarget(make_ip,make_ip.o,misc.o,misc.o,)

ip.c: make_ip
	./make_ip ip.c

NormalProgramTarget(make_kp,make_kp.o,misc.o,misc.o,)

key_perm.h: make_kp
	./make_kp key_perm.h

NormalProgramTarget(make_odd,make_odd.o,misc.o,misc.o,)

odd.h: make_odd
	./make_odd odd.h

NormalProgramTarget(make_p,make_p.o,misc.o,misc.o,)

p.c: make_p
	./make_p p.c

NormalProgramTarget(make_pt,make_pt.o,misc.o,misc.o,)

p_table.h: make_pt
	./make_pt p_table.h

NormalProgramTarget(make_s,make_s.o,misc.o,misc.o,)

NormalProgramTarget(make_st,make_st.o,misc.o,misc.o,)

s_table.h: make_st
	./make_st s_table.h

NormalLintTarget($(SRCS))

