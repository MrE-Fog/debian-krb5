CFLAGS = $(CCOPTS) $(DEFS) -I. -I$(srcdir)

##DOSBUILDTOP = ..\..\..
##DOSLIBNAME=..\gssapi.$(LIBEXT)
##DOSsrcdir = .
##DOS!include $(BUILDTOP)\config\windows.in

LIBDONE=DONE
LIB_SUBDIRSS=.

SRCS	= g_acquire_cred.c \
	  g_rel_cred.c \
	  g_init_sec_context.c \
	  g_accept_sec_context.c \
	  g_process_context.c \
	  g_delete_sec_context.c \
	  g_context_time.c \
	  g_sign.c \
	  g_verify.c \
	  g_seal.c \
	  g_unseal.c \
	  g_dsp_status.c \
	  g_indicate_mechs.c \
	  g_compare_name.c \
	  g_dsp_name.c \
	  g_imp_name.c \
	  g_rel_name.c \
	  g_rel_buffer.c \
	  g_rel_oid_set.c \
	  g_inquire_cred.c \
	  g_initialize.c \
	  get_mtype.c \
	  get_mechanism.c \
	  internal_name.c \
	  gssd_pname_to_uid.c \
	  add_mechanism.c

OBJS	= g_acquire_cred.$(OBJEXT) \
	  g_rel_cred.$(OBJEXT) \
	  g_init_sec_context.$(OBJEXT) \
	  g_accept_sec_context.$(OBJEXT) \
	  g_process_context.$(OBJEXT) \
	  g_delete_sec_context.$(OBJEXT) \
	  g_context_time.$(OBJEXT) \
	  g_sign.$(OBJEXT) \
	  g_verify.$(OBJEXT) \
	  g_seal.$(OBJEXT) \
	  g_unseal.$(OBJEXT) \
	  g_dsp_status.$(OBJEXT) \
	  g_indicate_mechs.$(OBJEXT) \
	  g_compare_name.$(OBJEXT) \
	  g_dsp_name.$(OBJEXT) \
	  g_imp_name.$(OBJEXT) \
	  g_rel_name.$(OBJEXT) \
	  g_rel_buffer.$(OBJEXT) \
	  g_rel_oid_set.$(OBJEXT) \
	  g_inquire_cred.$(OBJEXT) \
	  g_initialize.$(OBJEXT) \
	  get_mtype.$(OBJEXT) \
	  get_mechanism.$(OBJEXT) \
	  internal_name.$(OBJEXT) \
	  gssd_pname_to_uid.$(OBJEXT) \
	  add_mechanism.$(OBJEXT)

EHDRDIR= $(BUILDTOP)$(S)include$(S)gssapi
EXPORTED_HEADERS = mechglue.h

.c.o:
	$(CC) $(CFLAGS) -c $(srcdir)/$*.c
@SHARED_RULE@

all:: all-$(WHAT) 

all-unix:: shared includes $(OBJS)

all-mac:: shared includes $(OBJS)

all-windows:: includes $(OBJS)
	if not exist $(EHDRDIR)\nul mkdir $(EHDRDIR)
	copy mechglue.h $(EHDRDIR)

shared:
	mkdir shared

unixmac: 

libgssapi.$(LIBEXT): $(OBJS)
	$(ARCHIVE) $@ $(OBJS)
	$(RANLIB) $@

clean:: clean-$(WHAT)

clean-unix::
	$(RM) shared/*
 
clean-mac::
	$(RM) shared/*
 
clean-windows::
	$(RM) $(EHDRDIR)\gssapi.h $(EHDRDIR)\gssapi_generic.h
	if exist $(EHDRDIR)\nul rmdir $(EHDRDIR)

# Krb5InstallHeaders($(EXPORTED_HEADERS), $(KRB5_INCDIR)/krb5)
install::
	@set -x; for f in $(EXPORTED_HEADERS) ; \
	do $(INSTALL_DATA) $(srcdir)$(S)$$f     \
		$(DESTDIR)$(KRB5_INCDIR)$(S)gssapi$(S)$$f ; \
	done

includes::
